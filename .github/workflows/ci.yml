name: CI Pipeline (MySQL)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:9.4
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      NODE_ENV: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Wait for MySQL to be ready
        run: |
          echo "‚è≥ Waiting for MySQL..."
          for i in {1..30}; do
            mysql -h 127.0.0.1 -uroot -proot -e "SELECT 1" && break || sleep 2
          done

      - name: Install dependencies
        working-directory: apps/backend
        run: npm ci

      - name: Generate Prisma Client
        working-directory: apps/backend
        run: npx prisma generate

      - name: Apply Prisma migrations
        working-directory: apps/backend
        run: npx prisma migrate deploy

      - name: Run ESLint
        working-directory: apps/backend
        run: npm run lint

      - name: Run Jest tests with coverage
        working-directory: apps/backend
        run: npm run test:coverage

      - name: Upload coverage report artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: apps/backend/coverage

      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: apps/backend/coverage/lcov.info
          fail_ci_if_error: true
